//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.05.20 at 09:46:06 PM KRAT 
//


package org.github._1c_syntax.mdclasses.jabx.original;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import java.util.ArrayList;
import java.util.List;


/**
 * <p>Java class for CollectionOperations complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CollectionOperations"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;choice&gt;
 *         &lt;element name="add" type="{http://v8.1c.ru/8.2/uobjects}CollectionOperationAdd" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="addRange" type="{http://v8.1c.ru/8.2/uobjects}CollectionOperationAddRange" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="remove" type="{http://v8.1c.ru/8.2/uobjects}CollectionOperationRemove" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="removeRange" type="{http://v8.1c.ru/8.2/uobjects}CollectionOperationRemoveRange" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="swap" type="{http://v8.1c.ru/8.2/uobjects}CollectionOperationSwap" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="move" type="{http://v8.1c.ru/8.2/uobjects}CollectionOperationMove" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="clear" type="{http://v8.1c.ru/8.2/uobjects}CollectionOperationClear" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/choice&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CollectionOperations", namespace = "http://v8.1c.ru/8.2/uobjects", propOrder = {
    "add",
    "addRange",
    "remove",
    "removeRange",
    "swap",
    "move",
    "clear"
})
public class CollectionOperations {

    protected List<CollectionOperationAdd> add;
    protected List<CollectionOperationAddRange> addRange;
    protected List<CollectionOperationRemove> remove;
    protected List<CollectionOperationRemoveRange> removeRange;
    protected List<CollectionOperationSwap> swap;
    protected List<CollectionOperationMove> move;
    protected List<CollectionOperationClear> clear;

    /**
     * Gets the value of the add property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the add property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAdd().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CollectionOperationAdd }
     * 
     * 
     */
    public List<CollectionOperationAdd> getAdd() {
        if (add == null) {
            add = new ArrayList<CollectionOperationAdd>();
        }
        return this.add;
    }

    /**
     * Gets the value of the addRange property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the addRange property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAddRange().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CollectionOperationAddRange }
     * 
     * 
     */
    public List<CollectionOperationAddRange> getAddRange() {
        if (addRange == null) {
            addRange = new ArrayList<CollectionOperationAddRange>();
        }
        return this.addRange;
    }

    /**
     * Gets the value of the remove property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the remove property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRemove().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CollectionOperationRemove }
     * 
     * 
     */
    public List<CollectionOperationRemove> getRemove() {
        if (remove == null) {
            remove = new ArrayList<CollectionOperationRemove>();
        }
        return this.remove;
    }

    /**
     * Gets the value of the removeRange property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the removeRange property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRemoveRange().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CollectionOperationRemoveRange }
     * 
     * 
     */
    public List<CollectionOperationRemoveRange> getRemoveRange() {
        if (removeRange == null) {
            removeRange = new ArrayList<CollectionOperationRemoveRange>();
        }
        return this.removeRange;
    }

    /**
     * Gets the value of the swap property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the swap property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSwap().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CollectionOperationSwap }
     * 
     * 
     */
    public List<CollectionOperationSwap> getSwap() {
        if (swap == null) {
            swap = new ArrayList<CollectionOperationSwap>();
        }
        return this.swap;
    }

    /**
     * Gets the value of the move property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the move property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMove().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CollectionOperationMove }
     * 
     * 
     */
    public List<CollectionOperationMove> getMove() {
        if (move == null) {
            move = new ArrayList<CollectionOperationMove>();
        }
        return this.move;
    }

    /**
     * Gets the value of the clear property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the clear property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getClear().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CollectionOperationClear }
     * 
     * 
     */
    public List<CollectionOperationClear> getClear() {
        if (clear == null) {
            clear = new ArrayList<CollectionOperationClear>();
        }
        return this.clear;
    }

}
