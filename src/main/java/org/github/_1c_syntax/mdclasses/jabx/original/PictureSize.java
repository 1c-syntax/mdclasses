//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.05.20 at 09:46:06 PM KRAT 
//


package org.github._1c_syntax.mdclasses.jabx.original;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for PictureSize.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="PictureSize"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="RealSize"/&gt;
 *     &lt;enumeration value="Stretch"/&gt;
 *     &lt;enumeration value="Proportionally"/&gt;
 *     &lt;enumeration value="Tile"/&gt;
 *     &lt;enumeration value="AutoSize"/&gt;
 *     &lt;enumeration value="RealSizeIgnoreScale"/&gt;
 *     &lt;enumeration value="AutoSizeIgnoreScale"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "PictureSize", namespace = "http://v8.1c.ru/8.2/managed-application/logform")
@XmlEnum
public enum PictureSize {

    @XmlEnumValue("RealSize")
    REAL_SIZE("RealSize"),
    @XmlEnumValue("Stretch")
    STRETCH("Stretch"),
    @XmlEnumValue("Proportionally")
    PROPORTIONALLY("Proportionally"),
    @XmlEnumValue("Tile")
    TILE("Tile"),
    @XmlEnumValue("AutoSize")
    AUTO_SIZE("AutoSize"),
    @XmlEnumValue("RealSizeIgnoreScale")
    REAL_SIZE_IGNORE_SCALE("RealSizeIgnoreScale"),
    @XmlEnumValue("AutoSizeIgnoreScale")
    AUTO_SIZE_IGNORE_SCALE("AutoSizeIgnoreScale");
    private final String value;

    PictureSize(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PictureSize fromValue(String v) {
        for (PictureSize c: PictureSize.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
