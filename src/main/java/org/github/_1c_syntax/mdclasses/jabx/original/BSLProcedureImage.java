//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.05.20 at 09:46:06 PM KRAT 
//


package org.github._1c_syntax.mdclasses.jabx.original;

import javax.xml.bind.annotation.*;
import java.util.ArrayList;
import java.util.List;


/**
 * <p>Java class for BSLProcedureImage complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="BSLProcedureImage"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="label" type="{http://v8.1c.ru/8.2/data/bsl}BSLLabel" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="variable" type="{http://v8.1c.ru/8.2/data/bsl}BSLVariableImage" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="paramsDefValue" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="annotation" type="{http://v8.1c.ru/8.2/data/bsl}BSLAnnotation" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="name" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="isFunction" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
 *       &lt;attribute name="isExported" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
 *       &lt;attribute name="isExternal" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
 *       &lt;attribute name="parametersCount" type="{http://www.w3.org/2001/XMLSchema}unsignedInt" default="0" /&gt;
 *       &lt;attribute name="startAddr" type="{http://www.w3.org/2001/XMLSchema}unsignedInt" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "BSLProcedureImage", namespace = "http://v8.1c.ru/8.2/data/bsl", propOrder = {
    "label",
    "variable",
    "paramsDefValue",
    "annotation"
})
public class BSLProcedureImage {

    protected List<BSLLabel> label;
    protected List<BSLVariableImage> variable;
    protected List<String> paramsDefValue;
    protected List<BSLAnnotation> annotation;
    @XmlAttribute(name = "name")
    protected String name;
    @XmlAttribute(name = "isFunction")
    protected Boolean isFunction;
    @XmlAttribute(name = "isExported")
    protected Boolean isExported;
    @XmlAttribute(name = "isExternal")
    protected Boolean isExternal;
    @XmlAttribute(name = "parametersCount")
    @XmlSchemaType(name = "unsignedInt")
    protected Long parametersCount;
    @XmlAttribute(name = "startAddr")
    @XmlSchemaType(name = "unsignedInt")
    protected Long startAddr;

    /**
     * Gets the value of the label property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the label property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLabel().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link BSLLabel }
     * 
     * 
     */
    public List<BSLLabel> getLabel() {
        if (label == null) {
            label = new ArrayList<BSLLabel>();
        }
        return this.label;
    }

    /**
     * Gets the value of the variable property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the variable property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getVariable().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link BSLVariableImage }
     * 
     * 
     */
    public List<BSLVariableImage> getVariable() {
        if (variable == null) {
            variable = new ArrayList<BSLVariableImage>();
        }
        return this.variable;
    }

    /**
     * Gets the value of the paramsDefValue property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the paramsDefValue property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getParamsDefValue().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getParamsDefValue() {
        if (paramsDefValue == null) {
            paramsDefValue = new ArrayList<String>();
        }
        return this.paramsDefValue;
    }

    /**
     * Gets the value of the annotation property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the annotation property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAnnotation().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link BSLAnnotation }
     * 
     * 
     */
    public List<BSLAnnotation> getAnnotation() {
        if (annotation == null) {
            annotation = new ArrayList<BSLAnnotation>();
        }
        return this.annotation;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the isFunction property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isIsFunction() {
        if (isFunction == null) {
            return false;
        } else {
            return isFunction;
        }
    }

    /**
     * Sets the value of the isFunction property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsFunction(Boolean value) {
        this.isFunction = value;
    }

    /**
     * Gets the value of the isExported property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isIsExported() {
        if (isExported == null) {
            return false;
        } else {
            return isExported;
        }
    }

    /**
     * Sets the value of the isExported property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsExported(Boolean value) {
        this.isExported = value;
    }

    /**
     * Gets the value of the isExternal property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isIsExternal() {
        if (isExternal == null) {
            return false;
        } else {
            return isExternal;
        }
    }

    /**
     * Sets the value of the isExternal property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsExternal(Boolean value) {
        this.isExternal = value;
    }

    /**
     * Gets the value of the parametersCount property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    public long getParametersCount() {
        if (parametersCount == null) {
            return  0L;
        } else {
            return parametersCount;
        }
    }

    /**
     * Sets the value of the parametersCount property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setParametersCount(Long value) {
        this.parametersCount = value;
    }

    /**
     * Gets the value of the startAddr property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    public Long getStartAddr() {
        return startAddr;
    }

    /**
     * Sets the value of the startAddr property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setStartAddr(Long value) {
        this.startAddr = value;
    }

}
