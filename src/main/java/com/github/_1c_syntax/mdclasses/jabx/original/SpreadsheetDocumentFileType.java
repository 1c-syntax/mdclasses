//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.05.20 at 09:46:06 PM KRAT 
//


package com.github._1c_syntax.mdclasses.jabx.original;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for SpreadsheetDocumentFileType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="SpreadsheetDocumentFileType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="MXL"/&gt;
 *     &lt;enumeration value="XLS"/&gt;
 *     &lt;enumeration value="HTML"/&gt;
 *     &lt;enumeration value="TXT"/&gt;
 *     &lt;enumeration value="MXL7"/&gt;
 *     &lt;enumeration value="HTML3"/&gt;
 *     &lt;enumeration value="HTML4"/&gt;
 *     &lt;enumeration value="HTML5"/&gt;
 *     &lt;enumeration value="XLS95"/&gt;
 *     &lt;enumeration value="XLS97"/&gt;
 *     &lt;enumeration value="ANSITXT"/&gt;
 *     &lt;enumeration value="DOCX"/&gt;
 *     &lt;enumeration value="XLSX"/&gt;
 *     &lt;enumeration value="ODS"/&gt;
 *     &lt;enumeration value="PDF"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "SpreadsheetDocumentFileType", namespace = "http://v8.1c.ru/8.2/data/spreadsheet")
@XmlEnum
public enum SpreadsheetDocumentFileType {

    MXL("MXL"),
    XLS("XLS"),
    HTML("HTML"),
    TXT("TXT"),
    @XmlEnumValue("MXL7")
    MXL_7("MXL7"),
    @XmlEnumValue("HTML3")
    HTML_3("HTML3"),
    @XmlEnumValue("HTML4")
    HTML_4("HTML4"),
    @XmlEnumValue("HTML5")
    HTML_5("HTML5"),
    @XmlEnumValue("XLS95")
    XLS_95("XLS95"),
    @XmlEnumValue("XLS97")
    XLS_97("XLS97"),
    ANSITXT("ANSITXT"),
    DOCX("DOCX"),
    XLSX("XLSX"),
    ODS("ODS"),
    PDF("PDF");
    private final String value;

    SpreadsheetDocumentFileType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static SpreadsheetDocumentFileType fromValue(String v) {
        for (SpreadsheetDocumentFileType c: SpreadsheetDocumentFileType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
