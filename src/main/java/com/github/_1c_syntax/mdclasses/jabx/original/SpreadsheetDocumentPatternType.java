//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.05.20 at 09:46:06 PM KRAT 
//


package com.github._1c_syntax.mdclasses.jabx.original;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for SpreadsheetDocumentPatternType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="SpreadsheetDocumentPatternType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="WithoutPattern"/&gt;
 *     &lt;enumeration value="Solid"/&gt;
 *     &lt;enumeration value="Pattern1"/&gt;
 *     &lt;enumeration value="Pattern2"/&gt;
 *     &lt;enumeration value="Pattern3"/&gt;
 *     &lt;enumeration value="Pattern4"/&gt;
 *     &lt;enumeration value="Pattern5"/&gt;
 *     &lt;enumeration value="Pattern6"/&gt;
 *     &lt;enumeration value="Pattern7"/&gt;
 *     &lt;enumeration value="Pattern8"/&gt;
 *     &lt;enumeration value="Pattern9"/&gt;
 *     &lt;enumeration value="Pattern10"/&gt;
 *     &lt;enumeration value="Pattern11"/&gt;
 *     &lt;enumeration value="Pattern12"/&gt;
 *     &lt;enumeration value="Pattern13"/&gt;
 *     &lt;enumeration value="Pattern14"/&gt;
 *     &lt;enumeration value="Pattern15"/&gt;
 *     &lt;enumeration value="Pattern16"/&gt;
 *     &lt;enumeration value="Pattern17"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "SpreadsheetDocumentPatternType", namespace = "http://v8.1c.ru/8.2/data/spreadsheet")
@XmlEnum
public enum SpreadsheetDocumentPatternType {

    @XmlEnumValue("WithoutPattern")
    WITHOUT_PATTERN("WithoutPattern"),
    @XmlEnumValue("Solid")
    SOLID("Solid"),
    @XmlEnumValue("Pattern1")
    PATTERN_1("Pattern1"),
    @XmlEnumValue("Pattern2")
    PATTERN_2("Pattern2"),
    @XmlEnumValue("Pattern3")
    PATTERN_3("Pattern3"),
    @XmlEnumValue("Pattern4")
    PATTERN_4("Pattern4"),
    @XmlEnumValue("Pattern5")
    PATTERN_5("Pattern5"),
    @XmlEnumValue("Pattern6")
    PATTERN_6("Pattern6"),
    @XmlEnumValue("Pattern7")
    PATTERN_7("Pattern7"),
    @XmlEnumValue("Pattern8")
    PATTERN_8("Pattern8"),
    @XmlEnumValue("Pattern9")
    PATTERN_9("Pattern9"),
    @XmlEnumValue("Pattern10")
    PATTERN_10("Pattern10"),
    @XmlEnumValue("Pattern11")
    PATTERN_11("Pattern11"),
    @XmlEnumValue("Pattern12")
    PATTERN_12("Pattern12"),
    @XmlEnumValue("Pattern13")
    PATTERN_13("Pattern13"),
    @XmlEnumValue("Pattern14")
    PATTERN_14("Pattern14"),
    @XmlEnumValue("Pattern15")
    PATTERN_15("Pattern15"),
    @XmlEnumValue("Pattern16")
    PATTERN_16("Pattern16"),
    @XmlEnumValue("Pattern17")
    PATTERN_17("Pattern17");
    private final String value;

    SpreadsheetDocumentPatternType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static SpreadsheetDocumentPatternType fromValue(String v) {
        for (SpreadsheetDocumentPatternType c: SpreadsheetDocumentPatternType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
