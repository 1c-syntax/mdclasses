//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.05.20 at 09:46:06 PM KRAT 
//


package com.github._1c_syntax.mdclasses.jabx.original;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for SelectionShowMode.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="SelectionShowMode"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="WhenActive"/&gt;
 *     &lt;enumeration value="Always"/&gt;
 *     &lt;enumeration value="DontShow"/&gt;
 *     &lt;enumeration value="WhenMultipleCellsSelected"/&gt;
 *     &lt;enumeration value="WhenMultipleCellsSelectedWhenActive"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "SelectionShowMode", namespace = "http://v8.1c.ru/8.2/managed-application/logform")
@XmlEnum
public enum SelectionShowMode {

    @XmlEnumValue("WhenActive")
    WHEN_ACTIVE("WhenActive"),
    @XmlEnumValue("Always")
    ALWAYS("Always"),
    @XmlEnumValue("DontShow")
    DONT_SHOW("DontShow"),
    @XmlEnumValue("WhenMultipleCellsSelected")
    WHEN_MULTIPLE_CELLS_SELECTED("WhenMultipleCellsSelected"),
    @XmlEnumValue("WhenMultipleCellsSelectedWhenActive")
    WHEN_MULTIPLE_CELLS_SELECTED_WHEN_ACTIVE("WhenMultipleCellsSelectedWhenActive");
    private final String value;

    SelectionShowMode(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static SelectionShowMode fromValue(String v) {
        for (SelectionShowMode c: SelectionShowMode.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
